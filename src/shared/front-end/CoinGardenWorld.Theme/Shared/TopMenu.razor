
@inject NavigationManager Navigation
@inject ITopMenu topMenu
@using CoinGardenWorld.Theme.Infra

<!-- Header -->
<div class="header-main">
    <div class="header-container container">
        <div class="header-wrap">
            <!-- Logo -->
            <div class="header-logo logo animated" data-animate="fadeInDown" data-delay=".6">
                <a href="./" class="logo-link">
                    <img class="logo-dark" src="images/logo-black.png" alt="logo">
                    <img class="logo-light" src="images/logo-white.png" alt="logo">

                </a>
            </div>
            <!-- Menu Toogle -->
            <div class="header-nav-toggle">
                <a href="#" class="navbar-toggle" data-menu-toggle="header-menu">
                    <div class="toggle-line">
                        <span></span>
                    </div>
                </a>
            </div>
            <!-- Menu -->
            <div class="header-navbar animated" data-animate="fadeInDown" data-delay=".75">
                <nav class="header-menu" id="header-menu">
                    <ul class="menu">
                        @foreach (var topMenuMenuItem in topMenu.MenuItems)
                        {
                            if (topMenuMenuItem.SubMenuItems != null)
                            {
                                <li class="menu-item has-sub">
                                    <a class="menu-link nav-link menu-toggle" href="#">
                                        @topMenuMenuItem.Title
                                    </a>
                                    <div class="menu-sub menu-drop menu-mega menu-mega-1clmn">
                                        <div class="menu-mega-innr">
                                            <ul class="menu-mega-list">
                                                @foreach (var subMenuItem in topMenuMenuItem.SubMenuItems)
                                                {
                                                    if (subMenuItem.IsExternalUrl) {
                                                        <li class="menu-item">
                                                            <a class="menu-link nav-link" href="@subMenuItem.Url" target="_blank">
                                                                @subMenuItem.Title
                                                            </a>
                                                        </li>
                                                    }
                                                    else
                                                    {
                                                        <li class="menu-item">
                                                                            <a class="menu-link nav-link" href="@subMenuItem.Url">
                                                                @subMenuItem.Title
                                                            </a>
                                                        </li>
                                                    }
                                                }
                                            </ul>
                                            
                                            @if (!BuildConfigurationModeDetector.Current.Release()) {
                                                <ul class="menu-mega-list">
                                                    <li class="menu-item">
                                                        <a href="culturetest">Culture Test</a>
                                                    </li>
                                                </ul>
                                            }
                                            
                                        </div>
                                    </div>
                                </li>
                            }
                            else
                            {
                                if (topMenuMenuItem.IsExternalUrl)
                                {
                                    <li class="menu-item">
                                        <a class="menu-link nav-link" href="@topMenuMenuItem.Url" target="_blank">
                                            @topMenuMenuItem.Title
                                        </a>
                                    </li>

                                }
                                else
                                {
                                    <li class="menu-item">
                                        <a class="menu-link nav-link" href="@topMenuMenuItem.Url">
                                            @topMenuMenuItem.Title
                                        </a>
                                    </li>

                                }

                            }

                        }

                    </ul>
                    <ul class="menu-btns">
                        <CoinGardenWorld.Theme.Components.LanguageSwitcher.HeaderLanguageSwitcher/>
                       
                    </ul>
                    <ul class="menu" >

                            <LoginDisplay></LoginDisplay>

                    </ul>
                   @* <ul class="menu-btns">
                        <li>
                            <a href="page-register.html" class="btn btn-md btn-auto btn-secondary btn-outline no-change">
                                <span>Sign Up</span>
                            </a>
                        </li>
                        <li><a href="page-login.html" class="btn btn-md btn-auto btn-secondary no-change focus"><span>Login</span></a></li>
                    </ul>*@
                </nav>
            </div><!-- .header-navbar -->
        </div>
    </div>
</div><!-- .header-main -->
@code {

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (!firstRender) {
            
        }

    }
}
