@using PostDto = CoinGardenWorld.HttpClientsExtensions.PostDto

@* @page "/dashboard" *@

@attribute [Route(NavigationLinks.DASHBOARD_URL)]


@inject MobileApiAuthorizedHttpClient MobileApiAuthorizedHttpClient
@inject MobileApiHttpClient MobileApiHttpClient

@inject ILogger<Dashboard> Logger
@inject AuthenticationStateProvider AuthStateProvider

<!-- Your Page Content Goes Here-->
<div class="page-content header-clear-medium">
    @*
    <DashboardCardText></DashboardCardText>

    <DashboardCardText></DashboardCardText>

    <DashboardCardImage></DashboardCardImage>

    <DashboardCardText></DashboardCardText>

    <DashboardCardText></DashboardCardText>

    <DashboardCardImage></DashboardCardImage>
    *@

    <AuthorizeView>
        <Authorized>



        </Authorized>
        <NotAuthorized>

            <div class="card card-style">
                <div class="content px-2 text-center">
                    <h2>
                        Join our Garden Community
                    </h2>
                    <!-- TODO: On Mobile this will not work, check LoginDisplay -->
                    <a href="authentication/login" class="default-link btn btn-m rounded-s gradient-highlight shadow-bg shadow-bg-s mb-0 mt-2">
                        Login or register now!
                    </a>
                </div>
            </div>

        </NotAuthorized>
    </AuthorizeView>


    <DashboardCardImage EmbedLink="https://www.youtube.com/embed/ysIJUA8xF3A">
        <Header>
            YouTube
        </Header>

        <Content>
            Just copy the link to the service you want and add it inside a responsive-iframe div. We'll do the rest.
        </Content>
    </DashboardCardImage>

    <DashboardCardImage EmbedLink="https://www.youtube.com/embed/ekp_64XO16k">
        <Header>
            YouTube
        </Header>

        <Content>
            Just copy the link to the service you want and add it inside a responsive-iframe div. We'll do the rest.
        </Content>
    </DashboardCardImage>

    @if (_latestPosts.Any())
    {
        @foreach (var post in _latestPosts)
        {
            <DashboardCardImage>
                <Header>
                    Picture
                </Header>

                <Content>
                    Just copy the link to the service you want and add it inside a responsive-iframe div. We'll do the rest.
                </Content>
            </DashboardCardImage>

        }

    }
    else
    {

        <!-- TODO: Add some kind of preloader -->
    }

    <DashboardCardText></DashboardCardText>

    <div class="col-12 pb-4">
        <div class="d-flex justify-content-center">
            <div class="preloader-m">
                <div class="spinner-border color-highlight" style="border-width: 3px;" role="status"></div>
            </div>
        </div>
    </div>
</div>
<!-- End of Page Content-->
<ThemeLoader></ThemeLoader>

@code {
    // TODO:
    private List<PostDto> _latestPosts = new List<PostDto>();

    protected override async Task OnInitializedAsync()
    {

        try
        {
            var userAuth = await AuthStateProvider.GetAuthenticationStateAsync();

            if (userAuth.User.Identity != null && userAuth.User.Identity.IsAuthenticated)
            {
                var latestPosts = await MobileApiAuthorizedHttpClient.MobileApi.PostsAllAsync(null, null, null, null, 10, null);
                _latestPosts = latestPosts.ToList();
                StateHasChanged();

            }
            else
            {
                // TODO: Get Public Most viewed posts

                var latestPosts = await MobileApiHttpClient.MobileApi.GetPublicPostsAsync(null, null, null, null, 10, null);
                _latestPosts = latestPosts.ToList();
                StateHasChanged();
            }

        }
        catch (Exception e)
        {
            Logger.LogError(e.Message);
        }

        await base.OnInitializedAsync();
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {

        }

    }
}
