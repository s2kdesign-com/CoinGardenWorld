@inject ToastService ToastService
@implements IDisposable


<!-- Info Toast Bar-->
<div id="toast-top-4" class="@(_isVisible ? "show" : null) toast  toast-bar toast-top rounded-l bg-blue-dark shadow-bg shadow-bg-s" data-bs-delay="3000">
    <div class="align-self-center">
        <img src="./_content/CoinGardenWorldMobileApp.MobileAppTheme/images/avatars/5s.png" width="30" class="bg-blue-light rounded-xl shadow-l icon icon-s me-2" alt="image">
    </div>
    <div class="align-self-center ps-1">
        <strong class="font-13 mb-n2">Message from John</strong>
        <span class="font-10 mt-n1 opacity-70">Tap to view and Reply</span>
    </div>
    <div class="align-self-center ms-auto">
        <button type="button" class="btn-close btn-close-white me-2 m-auto font-9" data-bs-dismiss="toast"></button>
    </div>
</div> 

@* 
<div class="cs-toast @(_isVisible ? "cs-toast-visible" : null) @_backgroundCssClass">
    <div class="cs-toast-icon">
        <i class="fa fa-@_iconCssClass" aria-hidden="true"></i>
    </div>
    <div class="cs-toast-body">
        <h5>@_heading</h5>
        <p>@_message</p>
    </div>
</div> *@
@code {
    private string? _heading;
    private string? _message;
    private bool _isVisible;
    private string? _backgroundCssClass;
    private string? _iconCssClass;

    protected override void OnInitialized()
    {
        ToastService.OnShow += ShowToast;
        ToastService.OnHide += HideToast;
    }

    private void ShowToast(string message, ToastLevel level)
    {
        BuildToastSettings(level, message);
        _isVisible = true;
        StateHasChanged();
    }

    private void HideToast()
    {
        _isVisible = false;
        StateHasChanged();
    }
    
    private void BuildToastSettings(ToastLevel level, string message)
    {
        switch (level)
        {
            case ToastLevel.Info:
                _backgroundCssClass = $"bg-info";
                _iconCssClass = "info";
                _heading = "Info";
                break;
            case ToastLevel.Success:
                _backgroundCssClass = $"bg-success";
                _iconCssClass = "check";
                _heading = "Success";
                break;
            case ToastLevel.Warning:
                _backgroundCssClass = $"bg-warning";
                _iconCssClass = "exclamation";
                _heading = "Warning";
                break;
            case ToastLevel.Error:
                _backgroundCssClass = "bg-danger";
                _iconCssClass = "times";
                _heading = "Error";
                break;
            default:
                throw new ArgumentOutOfRangeException(nameof(level), level, null);
        }

        _message = message;
    }

    void IDisposable.Dispose()
    {
        ToastService.OnShow -= ShowToast;
        ToastService.OnHide -= HideToast;
    }
}
