name: Build Mobile APP - IOS, Android, Windows

on:
  push:
    paths:
    - 'src/mobile-app/app/**'
    - 'src/shared/**'
    branches:
      - main
  pull_request:
    branches: [ main ]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  DOTNET_NOLOGO: true                     # Disable the .NET logo
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience
  DOTNET_CLI_TELEMETRY_OPTOUT: true       # Disable sending .NET CLI telemetry
  PROJECT_SRC: src/mobile-app/app/CoinGardenWorldMobileApp.Maui
  PROJECT_NAME: CoinGardenWorldMobileApp.Maui.csproj
  DOTNET_VERSION: 8.0.x

jobs:
  # MAUI Android Build
  build-android:
    runs-on: windows-2022
    name: Android Build
    steps:
    
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          dotnet-quality: 'preview'
      
      - name: Set VERSION variable
        run: |
          echo ("VERSION_CI=" + $(type version) + ".${{github.run_number}}") >> $GITHUB_ENV          

      - name: .NET project version updater - ${{ env.VERSION_CI }}
        uses: vers-one/dotnet-project-version-updater@v1.2
        with:
          file: "src/mobile-app/**/*.csproj"
          version: "${{ env.VERSION_CI }}"
          
      - name: Install MAUI Workload
        run: dotnet workload install maui --ignore-failed-sources

      - name: Restore Dependencies
        run: dotnet restore ${{ env.PROJECT_SRC }}/${{ env.PROJECT_NAME }}

      - name: Build MAUI Android
        run: dotnet publish ${{ env.PROJECT_SRC }}/${{ env.PROJECT_NAME }} -c Release -f net8.0-android --no-restore

      - name: Upload Android Artifact
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
        with:
          name: coingarden-android-ci-build
          path: ${{ env.PROJECT_SRC }}/bin/Release/net8.0-android/*Signed.a*

# MAUI Windows Build
  build-windows:
    runs-on: windows-2022
    name: Windows Build
    steps:
    
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          dotnet-quality: 'preview'

      - name: Set VERSION variable
        run: |
          echo ("VERSION_CI=" + $(type version) + ".${{github.run_number}}") >> $GITHUB_ENV 
      - name: .NET project version updater - ${{ env.VERSION_CI }}
        uses: vers-one/dotnet-project-version-updater@v1.2
        with:
          file: "src/mobile-app/**/*.csproj"
          version: "${{ env.VERSION_CI }}"

      - name: Install MAUI Workload
        run: dotnet workload install maui --ignore-failed-sources

      - name: Restore Dependencies
        run: dotnet restore ${{ env.PROJECT_SRC }}/${{ env.PROJECT_NAME }}

      - name: Build MAUI Windows
        run: dotnet publish ${{ env.PROJECT_SRC }}/${{ env.PROJECT_NAME }} -c Release -f net8.0-windows10.0.17763.0 --no-restore

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
        with:
          name: coingarden-windows-ci-build
          path: ${{ env.PROJECT_SRC }}/bin/Release/net8.0-windows10.0.17763.0/win10-x64/AppPackages/CoinGardenWorld*/CoinGardenWorld*.msix

# MAUI iOS Build
  build-ios:
    runs-on: macos-12
    name: iOS Build
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          dotnet-quality: 'preview'
          
      - name: Set VERSION variable
        run: |
          VER=$(cat VERSION)
          VER_LONG="$VER.${{github.run_number}}"
          echo "VERSION_CI=$VER_LONG" >> $GITHUB_ENV          
      - name: .NET project version updater - ${{ env.VERSION_CI }}
        uses: vers-one/dotnet-project-version-updater@v1.2
        with:
          file: "src/mobile-app/**/*.csproj"
          version: "${{ env.VERSION_CI }}"

      - name: Install MAUI Workload
        run: dotnet workload install maui --ignore-failed-sources

      - name: Restore Dependencies
        run: dotnet restore ${{ env.PROJECT_SRC }}/${{ env.PROJECT_NAME }}

      - name: Build MAUI iOS
        run: dotnet build ${{ env.PROJECT_SRC }}/${{ env.PROJECT_NAME }} -c Release -f net8.0-ios --no-restore /p:buildForSimulator=True /p:packageApp=True /p:ArchiveOnBuild=False

      - name: Upload iOS Artifact
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
        with:
          name: coingarden-ios-ci-build
          path: ${{ env.PROJECT_SRC }}/bin/Release/net8.0-ios/iossimulator-x64/**/*.app

# MAUI MacCatalyst Build
  build-mac:
    runs-on: macos-12
    name: MacCatalyst Build
    steps:
    
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          dotnet-quality: 'preview'
          
      - name: Set VERSION variable
        run: |
          VER=$(cat VERSION)
          VER_LONG="$VER.${{github.run_number}}"
          echo "VERSION_CI=$VER_LONG" >> $GITHUB_ENV          
      - name: .NET project version updater - ${{ env.VERSION_CI }}
        uses: vers-one/dotnet-project-version-updater@v1.2
        with:
          file: "src/mobile-app/**/*.csproj"
          version: "${{ env.VERSION_CI }}"

      - name: Install MAUI Workload
        run: dotnet workload install maui --ignore-failed-sources

      - name: Restore Dependencies
        run: dotnet restore ${{ env.PROJECT_SRC }}/${{ env.PROJECT_NAME }}

      - name: Build MAUI MacCatalyst
        run: dotnet publish ${{ env.PROJECT_SRC }}/${{ env.PROJECT_NAME }} -c Release -f net8.0-maccatalyst --no-restore -p:BuildIpa=True

      - name: Upload MacCatalyst Artifact
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
        with:
          name: coingarden-macos-ci-build
          path: ${{ env.PROJECT_SRC }}/bin/Release/net8.0-maccatalyst/maccatalyst-x64/publish/*.pkg
              