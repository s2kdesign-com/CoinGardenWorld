name: Build GardenCHARITY API - Docker

on:
  push:
    paths:
    - 'src/charities/site/CoinGardenWorldCharities_Api/**'
    - 'src/shared/back-end/**'
    branches:
      - main
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  DOTNET_NOLOGO: true                     # Disable the .NET logo
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience
  DOTNET_CLI_TELEMETRY_OPTOUT: true       # Disable sending .NET CLI telemetry
  DOCKERFILE: src/charities/site/CoinGardenWorldCharities_Api/Dockerfile
  TAG: ghcr.io/s2kdesign-com/coingardenworld.charity_api
  VERSION_UPDATER_PATH: src/charities/site/**/*.csproj
 
jobs:
  deploy-to-github-docker:
    # use ubuntu-latest image to run steps on
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    - name: Login to ghcr
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set VERSION variable
      run: |
        VER=$(cat VERSION)
        VER_LONG="$VER.${{github.run_number}}"
        echo "VERSION_CI=$VER_LONG" >> $GITHUB_ENV
        
    - name: Show VERSION variable
      run: |
        echo "Building version - ${{ env.VERSION_CI }}"

    - name: .NET project version updater
      # You may pin to the exact commit or the version.
      # uses: vers-one/dotnet-project-version-updater@4838bb90da42ab72f272a9dde7888c1b7fb361f1
      uses: vers-one/dotnet-project-version-updater@v1.2
      with:
        # Project file path
        file: "${{ env.VERSION_UPDATER_PATH }}"
        # New version
        version: "${{ env.VERSION_CI }}"


    - name: Build
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: src/
        file: ${{ env.DOCKERFILE }}
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: |
            ${{ env.TAG }}:dev
            ${{ env.TAG }}:${{ env.VERSION_CI }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
      if: github.event_name == 'pull_request'

    - name: Build and push
      id: docker_build_push
      uses: docker/build-push-action@v2
      with:
        context: src/
        file: ${{ env.DOCKERFILE }}
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: |
            ${{ env.TAG }}:latest
            ${{ env.TAG }}:${{ env.VERSION_CI }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
      if: github.ref == 'refs/heads/main'

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
      if: github.event_name != 'pull_request'